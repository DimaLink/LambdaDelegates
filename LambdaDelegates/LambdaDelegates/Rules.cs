using System;

namespace LambdaDelegates
{

    partial class Rules
    {

        private delegate void PauseDelegate();
        private PauseDelegate pauseDelegate = () => { Console.WriteLine("Жми любую клавишу для продолжения"); Console.ReadKey(); Console.Clear(); };

        private string [] directives;
        private Random random;

        public Rules()
        {
            directives = new string[] {
                "Развивай социализм или воюй",
"Тебе нужны социалисты и генералы, пионеры и солдаты",
"Как только ты установил свой режим на планете - не отдавай планету назад",
"Вы не сможете никогда воевать против правды. Но у вас может быть своя правда",
"Не трать силы попусту",
"Успех никогда не вечен",
"Изменяйся или умри, адаптируйся или умри",
"Придерживайтесь своих интересов",
"Веди счет всему что делаешь в галактике",
"Пороки ужасны",
"Примитвные цивилизации порочны",
"Вы должны нести добро и развитие в галактику",
"Делегат без планет -не делегат",
"Установить на солнце красный флаг",
"Честность - сильное оружие",
"Вторжение - способ дорнести истину для слепых",
"Война - сопосб приобщить к цивилизации примитивные виды",
"Если планета была под вашим контрлем, то это может повториться",
"Удвой усилия, делагат!",
"Верь в идеалы Лямбда-лидера-калькулятора вселенной!",
"Никогда не подвергай сомнению числовеликие Лямбда-директивы!",
"Следуй правилам, будто ты внтури алгоритма!",
"Установить Лямбда-справедливость во всей галактике!",
"Начни с малого, установи Лямбда-режим-справедливость в хотя бы одной солнечной системе",
"Развивай свой успех. Ты на стороне великой силы Лямбда-метода!",
"Ты лямбда-делегат, лямбда-метод и лямбда-оператор",
"Ты есть выражение мысли вселленной",
"Вселенная преисполнена вычислениями",
"Следуй программе"};



            random = new Random();



        }

        public void ShowRules()
        {
            int index = -1;
            int color = 0;
            Console.Clear();
            for (int i = 0; i < directives.Length; ++i)
            {
                ShowRule(ref index, ref color);
                if ( (i % 5 == 0) && (i>0) )
                {
                    pauseDelegate();                
                }
                
            }
            Console.ForegroundColor = ConsoleColor.White;
        }


        partial void ShowRule(ref int _index, ref int _color);

    }

}